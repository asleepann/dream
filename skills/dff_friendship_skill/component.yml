dff-friendship-ru-skill:
  name: dff_friendship_skill
  display_name: Friendship Skill
  container_name: dff-friendship-ru-skill
  component_type: Script-based w/o NNs
  model_type: Dictionary/Pattern-based
  is_customizable: false
  author: publisher@deeppavlov.ai
  description: DFF-based skill to greet the user in the beginning of the dialog, and
    forward the user to some scripted skill
  ram_usage: 100M
  gpu_usage: null
  port: 8086
  endpoints:
  - group: skills
    endpoint: respond
  build_args:
    SERVICE_PORT: 8086
    SERVICE_NAME: dff_friendship_skill
    LANGUAGE: RU
  date_created: '2023-03-16T09:45:32'
  compose_override:
    env_file:
    - .env_ru
    build:
      args:
        SERVICE_PORT: 8086
        SERVICE_NAME: dff_friendship_skill
        LANGUAGE: RU
      context: .
      dockerfile: ./skills/dff_friendship_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8086
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 128M
  compose_dev:
    volumes:
    - ./skills/dff_friendship_skill:/src
    - ./common:/src/common
    ports:
    - 8086:8086
  compose_proxy: {}
dff-friendship-skill:
  name: dff_friendship_skill
  display_name: Friendship Skill
  container_name: dff-friendship-skill
  component_type: Script-based w/o NNs
  model_type: Dictionary/Pattern-based
  is_customizable: false
  author: publisher@deeppavlov.ai
  description: DFF-based skill to greet the user in the beginning of the dialog, and
    forward the user to some scripted skill
  ram_usage: 100M
  gpu_usage: null
  port: 8086
  endpoints:
  - group: skills
    endpoint: respond
  build_args:
    SERVICE_PORT: 8086
    SERVICE_NAME: dff_friendship_skill
  date_created: '2023-03-16T09:45:32'
  compose_override:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8086
        SERVICE_NAME: dff_friendship_skill
      context: .
      dockerfile: ./skills/dff_friendship_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8086
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M
  compose_dev:
    volumes:
    - ./skills/dff_friendship_skill:/src
    - ./common:/src/common
    ports:
    - 8086:8086
  compose_proxy:
    command:
    - nginx
    - -g
    - daemon off;
    build:
      context: dp/proxy/
      dockerfile: Dockerfile
    environment:
    - PROXY_PASS=dream.deeppavlov.ai:8086
    - PORT=8086

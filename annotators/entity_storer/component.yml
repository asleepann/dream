entity-storer:
  name: entity_storer
  display_name: Entity Storer
  container_name: entity-storer
  component_type: null
  model_type: Dictionary/Pattern-based
  is_customizable: false
  author: publisher@deeppavlov.ai
  description: a rule-based component, which stores entities from the user's and socialbot's
    utterances if opinion expression is detected with patterns or MIDAS Classifier
    and saves them along with the detected attitude to dialogue state
  ram_usage: 220M
  gpu_usage: null
  port: 8089
  endpoints:
  - group: annotators
    endpoint: respond
  build_args:
    SERVICE_PORT: 8089
    SERVICE_NAME: entity_storer
    WORK_DIR: annotators/entity_storer
  date_created: '2023-03-16T09:45:32'
  compose_override:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8089
        SERVICE_NAME: entity_storer
        WORK_DIR: annotators/entity_storer
      context: .
      dockerfile: annotators/entity_storer/Dockerfile
    command: flask run -h 0.0.0.0 -p 8089
    environment:
    - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 384M
  compose_dev:
    volumes:
    - ./common:/src/common
    - ./annotators/entity_storer:/src
    ports:
    - 8089:8089
  compose_proxy:
    command:
    - nginx
    - -g
    - daemon off;
    build:
      context: dp/proxy/
      dockerfile: Dockerfile
    environment:
    - PROXY_PASS=dream.deeppavlov.ai:8089
    - PORT=8089

text-qa:
  name: text_qa
  display_name: Text QA
  container_name: text-qa
  component_type: Retrieval
  model_type: NN-based
  is_customizable: false
  author: publisher@deeppavlov.ai
  description: The service finds the answer of a factoid question in text.
  ram_usage: 1.8G
  gpu_usage: 2.8G
  port: 8078
  endpoints:
  - group: services
    endpoint: model
  build_args:
    SERVICE_PORT: 8078
    SERVICE_NAME: text_qa
    CONFIG: qa_eng.json
  date_created: '2023-03-16T09:45:32'
  compose_override:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8078
        SERVICE_NAME: text_qa
        CONFIG: qa_eng.json
      context: services/text_qa
      dockerfile: Dockerfile
    command: flask run -h 0.0.0.0 -p 8078
    environment:
    - CUDA_VISIBLE_DEVICES=0
    - FLASK_APP=server
    - LANGUAGE=EN
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 3G
  compose_dev:
    volumes:
    - ./services/text_qa:/src
    - ~/.deeppavlov:/root/.deeppavlov
    - ~/.deeppavlov/cache:/root/.cache
    ports:
    - 8078:8078
  compose_proxy:
    command:
    - nginx
    - -g
    - daemon off;
    build:
      context: dp/proxy/
      dockerfile: Dockerfile
    environment:
    - PROXY_PASS=dream.deeppavlov.ai:8078
    - PORT=8078
text-qa-ru:
  name: text_qa
  display_name: Text QA
  container_name: text-qa-ru
  component_type: Retrieval
  model_type: NN-based
  is_customizable: false
  author: publisher@deeppavlov.ai
  description: "\u041D\u0430\u0432\u044B\u043A \u0434\u043B\u044F \u043E\u0442\u0432\
    \u0435\u0442\u0430 \u043D\u0430 \u0432\u043E\u043F\u0440\u043E\u0441\u044B \u043F\
    \u043E \u0442\u0435\u043A\u0441\u0442\u0443."
  ram_usage: 3.8G
  gpu_usage: 5.2G
  port: 8078
  endpoints:
  - group: skills
    endpoint: model
  - group: services
    endpoint: model
  build_args:
    SERVICE_PORT: 8078
    SERVICE_NAME: text_qa
    CONFIG: qa_rus.json
  date_created: '2023-03-16T09:45:32'
  compose_override:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8078
        SERVICE_NAME: text_qa
        CONFIG: qa_rus.json
      context: services/text_qa
      dockerfile: Dockerfile
    command: flask run -h 0.0.0.0 -p 8078
    environment:
    - CUDA_VISIBLE_DEVICES=0
    - FLASK_APP=server
    - LANGUAGE=RU
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 3G
  compose_dev:
    volumes:
    - ./services/text_qa:/src
    - ~/.deeppavlov:/root/.deeppavlov
    ports:
    - 8078:8078
  compose_proxy: {}
